node{
    elastest(tss: ['EUS'], surefireReportsPattern: '**/target/surefire-reports/TEST-*.xml') {
        stage("Setting environment") {
            echo 'Environment variables'
            sh "env"
            git "https://github.com/elastest/full-teaching-experiment.git"
        }
        stage("Start Sut") {
	        def filebeatImage = docker.image('elastest/etm-filebeat:latest')
	        def beatImage = docker.image('elastest/etm-dockbeat:latest')
	        
            beatImage.withRun("-e LOGSTASHHOST=${env.ET_MON_LSBEATS_HOST} -e LOGSTASHPORT=${env.ET_MON_INTERNAL_LSBEATS_PORT} -v /var/run/docker.sock:/var/run/docker.sock --network=elastest_elastest") { c ->
                sh 'sleep 5'
                filebeatImage.withRun("-e ET_ETM_LSHTTP_HOST=${env.ET_MON_LSBEATS_HOST} -e ET_ETM_LSHTTP_PORT=${env.ET_MON_LSBEATS_PORT} -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/containers:/var/lib/docker/containers --network=elastest_elastest") { c1 ->
                	sh "cd docker-compose/full-teaching-et-network; export BUG_TAG=demo; docker-compose --no-ansi -p ${env.ET_SUT_CONTAINER_NAME} up -d"
                	sh "sleep 20"
                	stage("Run Tests") {
                        try {
                            def fullteachingContainerName = env.ET_SUT_CONTAINER_NAME + "_full-teaching_1"
                            echo "Container name: " + fullteachingContainerName
                            def sutIp = containerIp(fullteachingContainerName)
                            echo 'Sut ip: '+ sutIp
            
                            echo 'Running test'
                            sh "mvn -Dapp.url=https://" + sutIp +":5001/ -Dtest=FullTeachingTestE2EREST,FullTeachingTestE2EVideoSession,FullTeachingTestE2EChat -B test"
                            step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
            
                        } finally {
                            echo 'Stopping SUT'
                            sh "cd docker-compose/full-teaching-env; docker-compose --no-ansi -p ${env.ET_SUT_CONTAINER_NAME} down"
                        }
                    }
                }
            }
        }
        
    }
}


def containerIp(containerName) {
    echo "Inside containerIp function"
    containerIp = sh (
        script: "docker inspect --format=\"{{.NetworkSettings.Networks.elastest_elastest.IPAddress}}\" "+ containerName,
        returnStdout: true
    ).trim()
    
    echo containerName+" IP = " + containerIp;
    return containerIp;
}
