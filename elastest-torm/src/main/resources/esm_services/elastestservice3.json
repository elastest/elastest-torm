{
	"register": {
		"description": "this is my test service",
		"id": "EDS",
		"name": "EDS",
		"bindable": false,
		"plan_updateable": false,
		"plans": [
			{
				"bindable": false,
				"description": "plan for testing",
				"free": true,
				"id": "testplan",
				"metadata": {
					"bullets": "basic plan",
					"costs": {
						"components": {
							
						},
						"description": "On Demand 5 per deployment, 50 per core, 10 per GB ram and 1 per GB disk",
						"fix_cost": {
							"deployment": 5
						},
						"name": "On Demand 5 + Charges",
						"type": "ONDEMAND",
						"var_rate": {
							"cpus": 50,
							"disk": 1,
							"memory": 10
						}
					}
				},
				"name": "testing plan"
			}
		],
		"requires": [],
		"tags": [
			"test",
			"tester"
		]
	},
	"manifest": {
		"id": "test-mani",
		"manifest_content": "version: '2'\n\nservices:\n  spark-master:\n    image: elastest/ebs-spark-base:0.5.0\n    container_name: spark-master\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - ./spark/alluxio_conf:/opt/alluxio/conf\n      - ./spark/spark_conf:/opt/spark/conf\n      - ./spark/hadoop_conf:/usr/local/hadoop/etc/hadoop\n    command: [\"/usr/bin/supervisord\", \"--configuration=/opt/conf/master.conf\"]\n    hostname: spark-master\n    networks:\n      - elastest\n\n  spark-worker:\n    image: elastest/ebs-spark-base:0.5.0\n    depends_on:\n      - spark-master\n    ports:\n      - \"8081\"\n    volumes:\n      - ./spark/alluxio_conf:/opt/alluxio/conf\n      - ./spark/spark_conf:/opt/spark/conf\n      - ./spark/hadoop_conf:/usr/local/hadoop/etc/hadoop\n    command: [\"/usr/bin/supervisord\", \"--configuration=/opt/conf/slave.conf\"]\n    hostname: spark-worker\n    networks:\n      - elastest\n\nnetworks:\n  elastest:\n    external: true\n",
		"manifest_type": "dummy",
		"plan_id": "testplan_10",
		"service_id": "EDS",
		"endpoints": {
			"sub_service_name_1": {
				"description": "this is a sub-service that does stuff",
				"main": true,
				"api": {
					"protocol": "http",
					"port": 9000,
					"path": "/v2",
					"definition": {
						"type": "openapi",
						"path": "/v2/api.yaml",
						"port": 9090
					}
				},
				"gui": {
					"protocol": "http",
					"port": 9089,
					"path": "/gui"
				}
			}
		}
	}
}