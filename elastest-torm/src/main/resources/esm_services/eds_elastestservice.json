{
	"register": {
		"description": "this is a test service for ElasTest Device Emulator Service",
		"id": "fe5e0531-b470-441f-9c69-721c2b4875f2",
		"name": "EDS",
		"short_name": "EDS",
		"bindable": false,
		"plan_updateable": false,
		"plans": [
			{
				"bindable": false,
				"description": "plan for testing",
				"free": true,
				"id": "94a1a0c7-21a0-42e3-abcd-f75f337b47c5",
				"metadata": {
					"bullets": "basic plan",
					"costs": {
						"components": {
							
						},
						"description": "On Demand 5 per deployment, 50 per core, 10 per GB ram and 1 per GB disk",
						"fix_cost": {
							"deployment": 5
						},
						"name": "On Demand 5 + Charges",
						"type": "ONDEMAND",
						"var_rate": {
							"cpus": 50,
							"disk": 1,
							"memory": 10
						}
					}
				},
				"name": "testing plan"
			}
		],
		"requires": [],
		"tags": [
			"test",
			"tester"
		]
	},
	"manifest": {
		"id": "b1c59b9c-5c7d-48c3-bb40-2c4c2cdd57c7",
		"manifest_content": "version: '2'\nservices:\n  zigbeeipe:\n    image: elastest/eds-zigbeeipe\n    environment:\n      - ci_env=`bash <(curl -s https://codecov.io/env)`\n    expose:\n      - 5001\n    networks:\n      - elastest_elastest\n\n  frontend:\n    image: elastest/eds-frontend\n    environment:\n      - ci_env=`bash <(curl -s https://codecov.io/env)`\n    expose:\n      - 4000\n      - 6065\n      - 8000\n    networks:\n      - elastest_elastest\n\n  memsipe:\n    image: elastest/eds-memsipe\n    environment:\n      - ci_env=`bash <(curl -s https://codecov.io/env)`\n    expose:\n      - 5050\n    networks:\n      - elastest_elastest\n\n  api:\n   image: elastest/eds-gateway\n   environment:\n     - ci_env=`bash <(curl -s https://codecov.io/env)`\n   expose:\n     - 8080\n   networks:\n     - elastest_elastest\n\nnetworks:\n  elastest_elastest:\n    external: true\n",
		"manifest_type": "docker-compose",
		"plan_id": "94a1a0c7-21a0-42e3-abcd-f75f337b47c5",
		"service_id": "fe5e0531-b470-441f-9c69-721c2b4875f2",
		"endpoints": {
			"frontend": {
				"description": "Service to show emulated sensor data in the form of plots",
				"main": "true",
				"gui": [
					{
						"protocol": "http",
						"port": 6065,
						"path": "/static/eds.html"
					},
					{
						"name": "swagger api",
						"protocol": "http",
						"port": 8080,
						"path": "/eds/ui"
					}
				]
			},
			"api": {
				"description": "Service to receive device data in JSON format with appropriate paths",
				"main": "false",
				"api": {
					"protocol": "http",
					"port": 8000,
					"path": "/onem2m/"
				}
			}
		}
	}
}