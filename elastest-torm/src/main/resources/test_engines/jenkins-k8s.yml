apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.elastest: true
    io.elastest.service: jenkins
    io.elastest.service.type: external
    elastest-component: jenkins
  name: jenkins
spec:
  ports:
  - name: "jenkins-8080"
    port: 8080
    targetPort: 8080
    nodePort: 37092
  selector:
    io.elastest.service: jenkins
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastest-jenkins-data-claim
  labels:
    io.elastest: true
    io.elastest.pvc: elastest-jenkins-data-claim 
    elastest-component: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: standard
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.elastest: true
    io.elastest.service: jenkins
    io.elastest.service.type: external
    elastest-component-type: external
    elastest-component: jenkins
  name: etm-jenkins
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.elastest.service.type: external
        io.elastest.service: jenkins
        elastest-component-type: external
        elastest-component: jenkins
    spec:
      containers:
      - env:
        - name: INTEGRATED_JENKINS
          value: "true"
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        image: elastest/etm-jenkins:1.1.1
        imagePullPolicy: Always
        name: etm-jenkins
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: elastest-jenkins-data
        - name: dockersock
          mountPath: "/var/run/docker.sock"
      restartPolicy: Always
      volumes:
      - name: elastest-jenkins-data
        persistentVolumeClaim:
          claimName: elastest-jenkins-data-claim
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
status: {}
